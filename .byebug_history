exit
yess = search_results_hash.find_all { |fuel_center| fuel_center["fuel_type_code"] == "ELEC" || "LPG"}
yess.count
yess = search_results_hash.find_all { |fuel_center| fuel_center["fuel_type_code"] == "ELEC" || "LPG"}
yess = search_results_hash.find_all { |fuel_center| fuel_center["fuel_type_code"] == "ELEC" || == "LPG"}
yess .count
yess = search_results_hash.find_all { |fuel_center| fuel_center["fuel_type_code"] == "ELEC" }
search_results_hash.find_all { |fuel_center| fuel_center["fuel_type_code"] == "ELEC" } 
search_results_hash.find)all { |fuel_center| fuel_center["fuel_type_code"] == "ELEC" } 
search_results_hash.first["fuel_type_code"]
search_results_hash.count
search_results_hash.first
search_results_hash
exit
service.search_stations(zip_code)
zip_code
exit
params
exit
eit
service.search_stations
@service
exit
FuelStationService
service
@service
service.search_stations
exit
reload!
zip_code
@_connection.get("/nearest.json?location=#{zip_code}")
response
repsponse
repsposne
exit
conn.get("/nearest.json?location=#{zip_code}")
conn = Faraday.new("http://developer.nrel.gov/api/alt-fuel-stations/v1")
conn = Faraday.new("developer.nrel.gov/api/alt-fuel-stations/v1")
connection.get("/nearest.json?location=#{zip_code}") 
exit
params
